package org.tweetyproject.arg.peaf.syntax.aif;

import com.google.common.collect.Sets;

import java.util.Set;

/**
 * AIFNode is an intermediate format that is generated by AIFCISReader.
 *
 * @author Taha Dogan Gunes
 */
public class AIFNode {
    /**
     * The set of aif nodes that target to this aif node.
     */
    private final Set<AIFNode> froms = Sets.newHashSet();

    /**
     * The set of aif nodes that originated (has an edge) by this aif node.
     */
    private final Set<AIFNode> tos = Sets.newHashSet();

    /**
     * The id of the node
     */
    public final String nodeID;

    /**
     * The type of the node
     */
    public final AIFNodeType nodeType;

    /**
     * The corresponding text of the aif node
     */
    public final String text;

    /**
     * The result assigned to the node (TODO: given the AIF specification is not finalised yet, this may be removed in future.)
     */
    public double probability;

    /**
     * The default constructor that creates an AIFNode
     *
     * @param nodeID   the id of the node
     * @param nodeType the node type
     * @param text     the text content
     */
    public AIFNode(String nodeID, AIFNodeType nodeType, String text) {
        this.nodeID = nodeID;
        this.nodeType = nodeType;
        this.text = text;
    }

    /**
     * Get all the aif nodes that targets this node
     *
     * @return a set of aif nodes
     */
    public Set<AIFNode> getFroms() {
        return froms;
    }

    /**
     * Get all the aif nodes that this node targets
     *
     * @return a set of aif nodes
     */
    public Set<AIFNode> getTos() {
        return tos;
    }

    @Override
    public String toString() {
        return "AIFNode{" +
                "id='" + nodeID + '\'' +
                ", type=" + nodeType +
                ", text='" + text + '\'' +
                ", prob=" + probability +
                '}';
    }
}

